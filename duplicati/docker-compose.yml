# Version 2.0 mandatory for CPU limiting
# See: https://github.com/docker/compose/issues/4513

version: '2.4'


services:

  # Service name
  duplicati:

    # Build Duplicati from last release
    # https://github.com/duplicati/duplicati/releases
    image: lmilcent/duplicati:2.0.5.114-debian
    container_name: duplicati

    build:
      context: .
      dockerfile: Dockerfile

    # no / always / on-failure / unless-stopped
    restart: unless-stopped

    # Stop delay (1s, 1m30s, etc.) and signal (SIGTERM is default)
    stop_grace_period: 15s
    stop_signal: SIGTERM

    labels:
      # Base
      traefik.enable: "true"
      traefik.docker.network: "proxy"
      traefik.http.routers.duplicati.entrypoints: "websecure"
      traefik.http.routers.duplicati.middlewares: "security@file, compression@file"
      traefik.http.routers.duplicati.tls: "true"
      traefik.http.routers.duplicati.tls.certresolver: "certMilcent"

      # Specific
      traefik.http.routers.duplicati.rule: "Host(`backup.milcent.co`) || Host(`backup.lmilcent.com`)"
      # Services
      #traefik.http.services.duplicati.loadbalancer.server.port: 8200
      #traefik.http.services.duplicati.loadbalancer.server.scheme: "http"

    environment:
      HOME: /config
      DUPLICATI_HOME: /config
      UID: 8888
      GID: 8888
  
    # Volumes
    volumes:
      - /data/duplicati/config:/config:rw,z
      - /etc/localtime:/etc/localtime:ro
      # Path where backups can be restored (read & write)
      - /data/duplicati/restore:/restore:rw,z
      # Volumes to backup (rw for creating ACL)
      - /home:/backups/home:rw
      - /data:/backups/data:rw
      - /root:/backups/root:rw

    # Limit resources
    cpus: 4
    mem_limit: 2048m
    memswap_limit: 2048m

    # Network
    networks:
      - proxy
    
    # Drop capabilities (man 7 capabilities for list)
    # Or https://man.archlinux.org/man/capabilities.7
    # Should drop ALL by default
    cap_drop:
      - ALL
    cap_add:
      - CHOWN             # For chown (s6)
      - FOWNER            # From chmod (s6 + ACL script)
      - SETUID            # Start a program using a specific UID (run script + s6)
      - SETGID            # Start a program using a specific GID (idem)
      - KILL              # For kill (s6)
      - DAC_OVERRIDE      # Allow root to bypass rwx permissions checks (s6)
      #- NET_BIND_SERVICE # Bind ports < 1024
      #- NET_ADMIN        # Network operations (change IP, route table, etc)
      #- NET_RAW          # Used for transparent proxying
      #- SYS_ADMIN        # Avoid do use this. Perform administrative operations

    pids_limit: 200       # Up to 50 pids during a backup task

    # Real root rights needed for setfacl on host files
    userns_mode: host

    # Only to backup a protected directory like /root or /home
    # Disable SELINUX for this container
    security_opt:
      - label:disable

# ----------------------------
# CREATION: NETWORKS & VOLUMES
# ----------------------------
networks:
  proxy:
    name: proxy
